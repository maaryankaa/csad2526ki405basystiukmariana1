|uart_top
clk => uart_baud_gen:baud_gen_inst.clk
clk => uart_tx:tx_inst.clk
clk => uart_rx:rx_inst.clk
reset_n => uart_baud_gen:baud_gen_inst.reset_n
reset_n => uart_tx:tx_inst.reset_n
reset_n => uart_rx:rx_inst.reset_n
tx_start => uart_tx:tx_inst.tx_start
tx_data[0] => uart_tx:tx_inst.tx_data[0]
tx_data[1] => uart_tx:tx_inst.tx_data[1]
tx_data[2] => uart_tx:tx_inst.tx_data[2]
tx_data[3] => uart_tx:tx_inst.tx_data[3]
tx_data[4] => uart_tx:tx_inst.tx_data[4]
tx_data[5] => uart_tx:tx_inst.tx_data[5]
tx_data[6] => uart_tx:tx_inst.tx_data[6]
tx_data[7] => uart_tx:tx_inst.tx_data[7]
rxd_in => uart_rx:rx_inst.rxd_in
txd_out <= uart_tx:tx_inst.txd_out
rx_data[0] <= uart_rx:rx_inst.rx_data[0]
rx_data[1] <= uart_rx:rx_inst.rx_data[1]
rx_data[2] <= uart_rx:rx_inst.rx_data[2]
rx_data[3] <= uart_rx:rx_inst.rx_data[3]
rx_data[4] <= uart_rx:rx_inst.rx_data[4]
rx_data[5] <= uart_rx:rx_inst.rx_data[5]
rx_data[6] <= uart_rx:rx_inst.rx_data[6]
rx_data[7] <= uart_rx:rx_inst.rx_data[7]
rx_ready <= uart_rx:rx_inst.rx_ready


|uart_top|uart_baud_gen:baud_gen_inst
clk => baud_tick~reg0.CLK
clk => counter[0].CLK
clk => counter[1].CLK
clk => counter[2].CLK
clk => counter[3].CLK
clk => counter[4].CLK
clk => counter[5].CLK
clk => counter[6].CLK
clk => counter[7].CLK
clk => counter[8].CLK
reset_n => baud_tick~reg0.ACLR
reset_n => counter[0].ACLR
reset_n => counter[1].ACLR
reset_n => counter[2].ACLR
reset_n => counter[3].ACLR
reset_n => counter[4].ACLR
reset_n => counter[5].ACLR
reset_n => counter[6].ACLR
reset_n => counter[7].ACLR
reset_n => counter[8].ACLR
baud_tick <= baud_tick~reg0.DB_MAX_OUTPUT_PORT_TYPE


|uart_top|uart_tx:tx_inst
clk => tx_reg.CLK
clk => shift_reg[0].CLK
clk => bit_cnt[0].CLK
clk => bit_cnt[1].CLK
clk => bit_cnt[2].CLK
clk => state~4.DATAIN
reset_n => tx_reg.PRESET
reset_n => shift_reg[0].ACLR
reset_n => bit_cnt[0].ACLR
reset_n => bit_cnt[1].ACLR
reset_n => bit_cnt[2].ACLR
reset_n => state~6.DATAIN
tx_start => shift_reg.OUTPUTSELECT
tx_start => state.OUTPUTSELECT
tx_start => state.OUTPUTSELECT
tx_start => state.OUTPUTSELECT
tx_start => state.OUTPUTSELECT
tx_start => Selector5.IN1
tx_data[0] => shift_reg.DATAB
tx_data[1] => ~NO_FANOUT~
tx_data[2] => ~NO_FANOUT~
tx_data[3] => ~NO_FANOUT~
tx_data[4] => ~NO_FANOUT~
tx_data[5] => ~NO_FANOUT~
tx_data[6] => ~NO_FANOUT~
tx_data[7] => ~NO_FANOUT~
baud_tick => state.OUTPUTSELECT
baud_tick => state.OUTPUTSELECT
baud_tick => state.OUTPUTSELECT
baud_tick => state.OUTPUTSELECT
baud_tick => bit_cnt[2].ENA
baud_tick => bit_cnt[1].ENA
baud_tick => tx_reg.ENA
baud_tick => bit_cnt[0].ENA
baud_tick => shift_reg[0].ENA
txd_out <= tx_reg.DB_MAX_OUTPUT_PORT_TYPE
tx_busy <= tx_busy.DB_MAX_OUTPUT_PORT_TYPE


|uart_top|uart_rx:rx_inst
clk => rx_reg[0].CLK
clk => rx_reg[1].CLK
clk => rx_reg[2].CLK
clk => rx_reg[3].CLK
clk => rx_reg[4].CLK
clk => rx_reg[5].CLK
clk => rx_reg[6].CLK
clk => rx_reg[7].CLK
clk => ready.CLK
clk => sample_cnt[0].CLK
clk => sample_cnt[1].CLK
clk => sample_cnt[2].CLK
clk => sample_cnt[3].CLK
clk => bit_cnt[0].CLK
clk => bit_cnt[1].CLK
clk => bit_cnt[2].CLK
clk => shift_reg[0].CLK
clk => shift_reg[1].CLK
clk => shift_reg[2].CLK
clk => shift_reg[3].CLK
clk => shift_reg[4].CLK
clk => shift_reg[5].CLK
clk => shift_reg[6].CLK
clk => shift_reg[7].CLK
clk => state~5.DATAIN
reset_n => ready.ACLR
reset_n => sample_cnt[0].ACLR
reset_n => sample_cnt[1].ACLR
reset_n => sample_cnt[2].ACLR
reset_n => sample_cnt[3].ACLR
reset_n => bit_cnt[0].ACLR
reset_n => bit_cnt[1].ACLR
reset_n => bit_cnt[2].ACLR
reset_n => shift_reg[0].ACLR
reset_n => shift_reg[1].ACLR
reset_n => shift_reg[2].ACLR
reset_n => shift_reg[3].ACLR
reset_n => shift_reg[4].ACLR
reset_n => shift_reg[5].ACLR
reset_n => shift_reg[6].ACLR
reset_n => shift_reg[7].ACLR
reset_n => state~7.DATAIN
reset_n => rx_reg[0].ENA
reset_n => rx_reg[7].ENA
reset_n => rx_reg[6].ENA
reset_n => rx_reg[5].ENA
reset_n => rx_reg[4].ENA
reset_n => rx_reg[3].ENA
reset_n => rx_reg[2].ENA
reset_n => rx_reg[1].ENA
rxd_in => shift_reg.DATAB
rxd_in => shift_reg.DATAB
rxd_in => shift_reg.DATAB
rxd_in => shift_reg.DATAB
rxd_in => shift_reg.DATAB
rxd_in => shift_reg.DATAB
rxd_in => shift_reg.DATAB
rxd_in => shift_reg.DATAB
rxd_in => rx_reg.OUTPUTSELECT
rxd_in => rx_reg.OUTPUTSELECT
rxd_in => rx_reg.OUTPUTSELECT
rxd_in => rx_reg.OUTPUTSELECT
rxd_in => rx_reg.OUTPUTSELECT
rxd_in => rx_reg.OUTPUTSELECT
rxd_in => rx_reg.OUTPUTSELECT
rxd_in => rx_reg.OUTPUTSELECT
rxd_in => ready.DATAB
rxd_in => state.OUTPUTSELECT
rxd_in => state.OUTPUTSELECT
rxd_in => state.OUTPUTSELECT
rxd_in => state.OUTPUTSELECT
rxd_in => sample_cnt.OUTPUTSELECT
rxd_in => sample_cnt.OUTPUTSELECT
rxd_in => sample_cnt.OUTPUTSELECT
rxd_in => sample_cnt.OUTPUTSELECT
baud_tick => state.OUTPUTSELECT
baud_tick => state.OUTPUTSELECT
baud_tick => state.OUTPUTSELECT
baud_tick => state.OUTPUTSELECT
baud_tick => rx_reg.OUTPUTSELECT
baud_tick => rx_reg.OUTPUTSELECT
baud_tick => rx_reg.OUTPUTSELECT
baud_tick => rx_reg.OUTPUTSELECT
baud_tick => rx_reg.OUTPUTSELECT
baud_tick => rx_reg.OUTPUTSELECT
baud_tick => rx_reg.OUTPUTSELECT
baud_tick => rx_reg.OUTPUTSELECT
baud_tick => shift_reg[7].ENA
baud_tick => shift_reg[6].ENA
baud_tick => shift_reg[5].ENA
baud_tick => shift_reg[4].ENA
baud_tick => shift_reg[3].ENA
baud_tick => shift_reg[2].ENA
baud_tick => shift_reg[1].ENA
baud_tick => shift_reg[0].ENA
baud_tick => bit_cnt[2].ENA
baud_tick => bit_cnt[1].ENA
baud_tick => bit_cnt[0].ENA
baud_tick => sample_cnt[3].ENA
baud_tick => sample_cnt[2].ENA
baud_tick => sample_cnt[1].ENA
baud_tick => sample_cnt[0].ENA
baud_tick => ready.ENA
rx_data[0] <= rx_reg[0].DB_MAX_OUTPUT_PORT_TYPE
rx_data[1] <= rx_reg[1].DB_MAX_OUTPUT_PORT_TYPE
rx_data[2] <= rx_reg[2].DB_MAX_OUTPUT_PORT_TYPE
rx_data[3] <= rx_reg[3].DB_MAX_OUTPUT_PORT_TYPE
rx_data[4] <= rx_reg[4].DB_MAX_OUTPUT_PORT_TYPE
rx_data[5] <= rx_reg[5].DB_MAX_OUTPUT_PORT_TYPE
rx_data[6] <= rx_reg[6].DB_MAX_OUTPUT_PORT_TYPE
rx_data[7] <= rx_reg[7].DB_MAX_OUTPUT_PORT_TYPE
rx_ready <= ready.DB_MAX_OUTPUT_PORT_TYPE


